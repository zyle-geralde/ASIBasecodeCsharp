@model IEnumerable<ASI.Basecode.Services.ServiceModels.LanguageViewModel>;
@{
    ViewData["Title"] = "Users";
    Layout = "_AdminSidebarLayout";
}

@section styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="~/css/admin/common.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/admin/language.css" asp-append-version="true" />
}

<div class="users-container p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div class="header-section">
            <h1>Languages</h1>
            <p>View and manage language</p>
        </div>


        <a class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#addLanguageModal">
            <i class="fas fa-plus me-2" style="color: #fff"></i> ADD LANGUAGE
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card">
        <div class="card-body">
            <div class="search-filter-container">
                <div style="position: relative; flex-grow: 1;">
                    <i class="fas fa-search search-icon"></i>
                    <input type="text" id="searchInput" class="form-control search-field" placeholder="Search" style="padding-left: 33px;" />
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-secondary">
                        <i class="fas fa-sort"></i> Sort
                    </button>
                </div>
            </div>

            <div class="table-responsive justify-content-around">
                
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th style="padding-left: 10px">Language</th>
                            <th class="text-md-center" style="width: 25%;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any()) // Check if the model is not null and has items
                        {
                            @foreach (var language in Model)
                            {
                                <tr>
                                    <td class="align-middle" style="padding-left: 10px">@language.LanguageName</td>
                                    <td class="align-middle" style="white-space:nowrap;">
                                        <div class="action-buttons justify-content-center">
                                            <button type="button" class="btn btn-icon text-danger delete-language-btn"
                                                    data-bs-toggle="modal" data-bs-target="#deleteLanguageModal"
                                                    data-id="@language.LanguageId" data-name="@language.LanguageName" id="delete_language_button">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                            <button type="button" class="btn btn-icon text-primary edit-language-btn"
                                                    data-bs-toggle="modal" data-bs-target="#editLanguageModal"
                                                    data-id="@language.LanguageId" data-name="@language.LanguageName" id="edit_language_button">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="2" class="text-center">No languages found.</td>
                            </tr>
                        }
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Add Language Modal -->
<div class="modal fade" id="addLanguageModal" tabindex="-1" aria-labelledby="addLanguageLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content add-language-modal-content p-4">
            <div class="modal-header border-0 pb-0 mb-3">
                <h5 class="modal-title add-language-title" id="addLanguageLabel">Add New Language</h5>
                <button type="button" class="btn-close add-language-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body pt-2">
                <div id="addLanguageErrorAlert">
                </div>
                <form id="addLanguageForm" >
                    <div class="mb-3">
                        <label for="newLanguage" class="form-label">Language</label>
                        <input type="text" class="form-control" id="newLanguage" name="LanguageName" placeholder="Text"> @* Removed 'required' as JS/server will handle validation *@
                        <span id="languageNameError" class="text-danger"></span> @* Use a specific ID for this error span *@
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn add-language-btn" id="submitAddLanguageBtn">ADD</button> @* Changed type to 'button' and added ID *@
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@*Edit Modal*@
<div class="modal fade" id="editLanguageModal" tabindex="-1" aria-labelledby="editLanguageLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content add-language-modal-content p-4">
            <div class="modal-header border-0 pb-0 mb-3">
                <h5 class="modal-title add-language-title" id="editLanguageLabel">Edit Language</h5>
                <button type="button" class="btn-close add-language-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body pt-2">
                <dev id="editLanguageForm">
                    
                    <div class="mb-3">
                        <label for="newLanguage" class="form-label">Language</label>
                        <input type="text" class="form-control" id="editLanguage" />
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn add-language-btn" id="edit-button-submit">SAVE CHANGES</button>
                    </div>
                </dev>
            </div>
        </div>
    </div>
</div>


<div class="modal fade confirmation-modal" id="deleteLanguageModal" tabindex="-1" aria-labelledby="deleteLanguageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="deleteLanguageModalLabel">Delete Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <p class="mb-4" id="deleteLanguageModalText">Are you sure you want to delete this language?</p>
                <div id="deleteUserForm">

                    <div class="d-flex justify-content-center gap-2">
                        <button type="button" class="btn btn-secondary px-4" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-danger px-4" id ="delete-button-submit">Delete</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade success-modal" id="successLanguageModal" tabindex="-1" aria-labelledby="successLanguageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center py-4">
                <div class="success-icon mb-3">
                    <i class="fas fa-check"></i>
                </div>
                <h5 class="modal-title mb-2">Deleted!</h5>
                <p class="mb-4">Item deleted successfully!</p>
                <button type="button" class="btn btn-secondary px-4" data-bs-dismiss="modal" id="successLanguageModalOkBtn">OK</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Proper modal handling
            $('#addLanguageModal','#editLanguageModal', '#deleteLanguageModal', '#successLanguageModal').on('hidden.bs.modal', function () {
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
            });

            //Add Language
                $('#submitAddLanguageBtn').on('click', async function(e) {
                        e.preventDefault(); //Prevent default button click behavior

                        //Clear previous error messages 
                        $('#languageNameError').text('');
                        $('#addLanguageErrorAlert').empty();

                        var languageName = $('#newLanguage').val();

                        try{
                                //fetch for Add Language
                                const response = await fetch('/Language/AddLanguage', {
                                    method: 'POST',
                                    headers: {
                                    'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({LanguageName: languageName })
                                })

                                if (response.ok) {
                                    var data = await response.json();
                                    console.log(data)
                                    alert(data.message)
                                    location.reload();
                                }
                                 else {
                                    var data = await response.json();
                                    console.log(data)
                                    alert(data.message)
                                            
                                 }
                        }
                        catch(error){
                            alert(error);
                        }

                    });


            //Delete Language
                const show_delete_modal = document.querySelectorAll("#delete_language_button")


                let languageIdToDelete = null

                //Adding click event listener for each delete button
                //Grab the bookId cover Url and Book Url from which the trash button was clicked
                show_delete_modal.forEach(button => {
                    button.addEventListener("click", function (event) {
                        languageIdToDelete = this.dataset.id;
                        console.log(languageIdToDelete)

                    })
                })

                $("#delete-button-submit").on("click",async function(event){
                            event.preventDefault();

                    try{
                        //fetch for Delete Language
                            const response = await fetch('/Language/Delete', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({LanguageId: languageIdToDelete })
                        })

                        if (response.ok) {
                            var data = await response.json();
                            console.log(data)
                            alert(data.message)
                            location.reload();
                        }
                        else {
                            var data = await response.json();
                            console.log(data)
                            alert(data.message)

                         }
                    }
                    catch(error){
                        alert(error);
                    
                    }
                })


            //Edit language
                  const show_edit_modal = document.querySelectorAll("#edit_language_button");
                  let languageIdToEdit = null
                  let languageNameToEdit = null

                        //Adding click event listener for each delete button
                        //Grab the bookId cover Url and Book Url from which the trash button was clicked
                  show_edit_modal.forEach(button => {
                  button.addEventListener("click", function (event) {
                      languageIdToEdit = this.dataset.id;
                      languageNameToEdit = this.dataset.name
                      $("#editLanguage").val(languageNameToEdit)
                      console.log(languageIdToEdit)
                      console.log(languageNameToEdit)

                      })


                    $("#edit-button-submit").on("click",async function(event){

                        event.preventDefault();
                        console.log(languageIdToEdit)
                        console.log(languageNameToEdit)

                        
                    })
             })

         });

 
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
}
