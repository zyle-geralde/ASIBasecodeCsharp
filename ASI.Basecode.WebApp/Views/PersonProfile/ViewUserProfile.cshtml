@using System.Security.Claims
@model ASI.Basecode.Services.ServiceModels.PersonProfileViewModel;
@inject ASI.Basecode.WebApp.AccessControl.IAccessControlInterface AccessControl

@{
    ViewData["Title"] = "User Profile";
	var isAdmin = await AccessControl.CheckAdminAccess();
	var currentUserId = User.Identity.IsAuthenticated ? User.FindFirstValue(ClaimTypes.NameIdentifier) : null;
	bool userHasReviewed = Model?.Reviews?.Any(r => r.UserId == currentUserId) ?? false;

	@if (isAdmin)
	{
		Layout = "_AdminSidebarLayout";
		<link rel="stylesheet" href="~/css/admin/adminsidebar.css" asp-append-version="true" />

		<style>
			.container {
				margin-top: 70px;
			}
		</style>
	}
	else
	{
		<style>
			.container {
				margin-top: 70px;
			}
		</style>
	}
}


@section styles {
    <link rel="stylesheet" href="~/css/admin/books/bookdetails.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/admin/common.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/userui/viewuser.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
}

<div class="book-details-page-wrapper">
    <!-- Hero Section -->
    <div class="book-details-header user-details-header">
        <div class="profile-avatar">
            @if (!string.IsNullOrEmpty(Model?.ProfilePicture))
            {
                <img src="@(Model.ProfilePicture)" alt="Profile picture" class="header-book-cover-image rounded-circle" />
            }
            else
            {
                <div class="header-book-cover-image dummy-cover d-flex align-items-center justify-content-center" style="background:#e0e0e0;">
                    <i class="fas fa-user fa-4x text-secondary"></i>
                </div>
            }
        </div>
        <div class="book-header-info user-header-info">
            <h1 class="book-header-title">
                @(string.IsNullOrWhiteSpace(Model?.FirstName) && string.IsNullOrWhiteSpace(Model?.LastName)
                                ? $"{Model.Username}"
                                : $"{Model?.FirstName} {Model?.LastName}".Trim())
            </h1>

            <div class="user-header-tags">
                <span class="book-tag">@Model?.Email</span>
            </div>
        </div>
    </div>

    <!-- Table of Contents -->
    <div class="book-details-container">
        <div class="book-toc">
            <h2 class="toc-title">Contents</h2>
            <div class="toc-links">
                <a href="#about" class="toc-link"><i class="fas fa-user"></i> About</a>
                <a href="#personal" class="toc-link"><i class="fas fa-id-card"></i> Personal Info</a>
                <a href="#account" class="toc-link"><i class="fas fa-user-cog"></i> Account Info</a>
                <a href="#reviews" class="toc-link"><i class="fas fa-comments"></i> Reviews</a>
            </div>
        </div>

        <!-- About Section -->
        <section id="about" class="book-detail-section">
            <div class="usersection-header">
                <div class="usersection-icon">
                    <i class="fas fa-user"></i>
                </div>
                <h2>About</h2>
            </div>
            <div class="usersection-content">
                <div class="book-description">
                    @(string.IsNullOrWhiteSpace(Model?.AboutMe) ? "No bio available" : Model.AboutMe)
                </div>
            </div>
        </section>

        <!-- Personal Info Section -->
        <section id="personal" class="book-detail-section">
            <div class="usersection-header">
                <div class="usersection-icon">
                    <i class="fas fa-id-card"></i>
                </div>
                <h2>Personal Information</h2>
            </div>
            <div class="usersection-content">
                <div class="info-grid">
                    <div class="info-item">
                        <div class="info-label"><i class="fas fa-user"></i> First Name</div>
                        <div class="info-value">@Model.FirstName</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label"><i class="fas fa-user"></i> Middle Name</div>
                        <div class="info-value">@Model.MiddleName</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label"><i class="fas fa-user"></i> Last Name</div>
                        <div class="info-value">@Model.LastName</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label"><i class="fas fa-birthday-cake"></i> Birthdate</div>
                        <div class="info-value">
                            @(Model.Birthdate?.ToString("MM/dd/yyyy") ?? "MM/DD/YYYY")
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-label"><i class="fas fa-venus-mars"></i> Gender</div>
                        <div class="info-value">@Model.Gender</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label"><i class="fas fa-map-marker-alt"></i> Location</div>
                        <div class="info-value">@Model.Location</div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Account Info Section -->
        <section id="account" class="book-detail-section">
            <div class="usersection-header">
                <div class="usersection-icon">
                    <i class="fas fa-user-cog"></i>
                </div>
                <h2>Account Information</h2>
            </div>
            <div class="usersection-content">
                <div class="info-grid">
                    <div class="info-item">
                        <div class="info-label"><i class="fas fa-user"></i> Username</div>
                        <div class="info-value">@Model.Username</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label"><i class="fas fa-envelope"></i> Email</div>
                        <div class="info-value">@Model.Email</div>
                    </div>
                </div>
            </div>
        </section>

        <!-- User's Reviews Section (keep your existing markup here) -->
        <section id="reviews" class="userprofile-reviews-section mt-5">
            <div class="section-header d-flex align-items-center gap-2">
                <div class="section-icon position-relative">
                    <i class="fas fa-comments"></i>
                    @if (Model.Reviews != null && Model.Reviews.Count > 0)
                    {
                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                            @Model.Reviews.Count
                            <span class="visually-hidden">number of reviews</span>
                        </span>
                    }
                </div>
                <h2 class="mb-0" style="color: #fff">User's Reviews</h2>
            </div>
            <div class="section-content">
                @if (Model.Reviews == null || !Model.Reviews.Any())
                {
                    <div class="no-reviews">
                        <i class="far fa-comment-alt"></i>
                        <p>This user hasn't written any reviews yet.</p>
                        <small class="text-muted">Encourage them to start exploring books and share their thoughts!</small>
                    </div>
                }
                else
                {
                    <div class="reviews-container">
                        @foreach (var review in Model.Reviews)
                        {
                            <div class="modern-review-box" data-review-id="@review.ReviewId">
                                <div class="review-header">
                                    <div class="book-info">
                                        <div class="book-title">
                                            <a asp-route="BookDetails" asp-route-bookId="@review.BookId" class="book-link">
                                                 @review.BookTitle
                                            </a>
											<div class="review-rating">
												@for (var i = 1; i <= 5; i++)
												{
													if (i <= review.Rating)
													{
														<i class="fas fa-star"></i>
													}
													else if (i - 0.5 <= review.Rating)
													{
														<i class="fas fa-star-half-alt"></i>
													}
													else
													{
														<i class="far fa-star"></i>
													}
												}
												<span class="rating-value">@review.Rating / 5</span>

											</div>
                                        </div>
                                    </div>
                                    <div class="review-rating">
										<div class="review-actions">
											@* @if (review.UserId == currentUserId)
											{
												<button class="btn btn-edit-review" onclick="editReview('@review.ReviewId', '@review.BookId', @(review.Rating), '@Html.Raw(Html.Encode(review.Comment))', '@review.UploadDate?.ToString("yyyy-MM-ddTHH:mm:ss")')">
													<i class="fas fa-edit"></i> Edit
												</button>
											} *@
											
											@if (isAdmin || review.UserId == currentUserId)
											{
												<button class="btn btn-delete-review"
														onclick="deleteBookReview('@review.ReviewId')">
													<i class="fas fa-trash-alt"></i> Delete
												</button>
											}
										</div>
										
										
                                    </div>
                                </div>
								
										
                                <div class="review-content">
									

                                    <div class="review-comment">@review.Comment</div>
                                </div>

                                <div class="review-footer">
                                    <div class="review-meta">
                                        <div class="review-date">
                                            <i class="fas fa-calendar-alt"></i>
                                            Posted: @review.UploadDate?.ToString("MMMM dd, yyyy")
                                        </div>
                                        @if (review.UpdatedDate.HasValue && review.UpdatedDate != review.UploadDate)
                                        {
                                            <div class="review-updated">
                                                <i class="fas fa-edit"></i>
                                                Updated: @review.UpdatedDate?.ToString("MMMM dd, yyyy")
                                            </div>
                                        }
										
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </section>
    </div>
</div>

<div class="modal fade confirmation-modal" id="deleteBookReviewModal" tabindex="-1" aria-labelledby="deleteBookReviewModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header border-0">
				<h5 class="modal-title" id="deleteBookReviewModalLabel">Confirm Delete</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body text-center">
				<h6>Are you sure you want to delete this review?</h6>
				<p class="text-muted">This action cannot be undone.</p>
			</div>
			<div class="modal-footer border-0 justify-content-center">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" id="confirmDeleteBookReview" class="btn btn-danger">Delete Review</button>
			</div>
		</div>
	</div>
</div>
<div class="modal fade profile-edit-modal" id="userInfoEdit" tabindex="-1" aria-labelledby="userInfoEditLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="userInfoEditLabel">User Information</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body pt-0">

                <form id="userInfoForm" asp-controller="PersonProfile" asp-action="UpdateUserInfo" method="post" asp-route-id="@Model.Id">
                    <input asp-for="UserId" type="hidden" />
                    <div class="mb-3">
                        <label for="userName" class="form-label">Username</label>
                        <input asp-for="Username" type="text" class="form-control" id="userName" placeholder="Text" maxlength="30">
                        <span asp-validation-for="Username" class="text-danger"></span>
                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary px-4">SAVE CHANGES</button>
                    </div>
                </form>
                
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script>
        // Smooth scroll for anchor links
        $(document).ready(function () {
            $('a.toc-link').on('click', function (event) {
                if (this.hash !== "") {
                    event.preventDefault();
                    const hash = this.hash;
                    $('.toc-link').removeClass('active');
                    $(this).addClass('active');
                    $('html, body').animate({
                        scrollTop: $(hash).offset().top - 80
                    }, 600);
                }
            });
        });
    </script>

	<script>
		let reviewIdToDelete = null;

		function deleteBookReview(reviewId) {
			reviewIdToDelete = reviewId;
			var deleteModal = new bootstrap.Modal(document.getElementById('deleteBookReviewModal'));
			deleteModal.show();
		}

		$('#confirmDeleteBookReview').click(function () {
			if (reviewIdToDelete) {
				const token = $('input[name="__RequestVerificationToken"]').first().val();

				$.ajax({
					url: '@Url.Action("Delete", "Review")',
					type: 'POST',
					data: {
						id: reviewIdToDelete,
						__RequestVerificationToken: token
					},
					success: function (response) {
						var deleteModal = bootstrap.Modal.getInstance(document.getElementById('deleteBookReviewModal'));
						deleteModal.hide();

						toastr.success("Review deleted successfully!");

						// Optionally, reload the page or remove the review from DOM
						setTimeout(function () {
							location.reload();
						}, 1200);

						reviewIdToDelete = null;
					},
					error: function (xhr, status, error) {
						toastr.error("Error deleting review: " + error);
					}
				});
			}
		});
	</script>
}