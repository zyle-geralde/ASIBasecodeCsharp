@using ASI.Basecode.Services.ServiceModels
@model UserViewModel
@using ASI.Basecode.WebApp.Models
@{
    Layout = "_AdminSidebarLayout";
    var errorMessage = TempData["ErrorMessage"] as string;
    var isUsernameError = errorMessage != null && errorMessage.ToLower().Contains("username");

    var successModal = new SuccessModalModel
    {
        Id = "successModal",
        Title = "Success!",
        Message = "User information saved successfully!",
        OkButtonText = "OK"
    };

    var saveConfirmationModal = new ConfirmationModalModel
    {
        Id = "saveModal",
        Title = "Save Changes",
        Message = "Are you sure you want to save your changes?",
        CancelButtonText = "Discard",
        ConfirmButtonText = "Save",
        ConfirmButtonId = "saveConfirmBtn",
        ConfirmButtonClass = "btn-danger-2"
    };
}

@section styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="~/css/admin/common.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/admin/users/edituser.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/modal.css" asp-append-version="true" /> 
}

<div class="admin-common-container">
    <div class="admin-common-content-wrapper">
        <div class="header-section">
            <h1>Edit User Details</h1>
            <p>Edit details of the new user here.</p>
        </div>

        <form class="edit-user-form" asp-action="EditUser" asp-controller="User" method="post">
            <input type="hidden" name="id" value="@ViewContext.RouteData.Values["id"]" />
            <input type="hidden" asp-for="IsUpdate" value="true" />
            <div class="form-row" style="margin-bottom: 30px">
                <div class="form-group">
                    <label for="userId">Email</label>
                    <input type="email" id="userId" class="form-control" disabled readonly
                           asp-for="Email" placeholder="sample@gmail.com" />
                    <input type="hidden" asp-for="Email" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="name">Username</label>
                    <input type="text" id="name" class="form-control"
                           asp-for="UserName" placeholder="Username"
                           data-bs-toggle="tooltip" data-bs-placement="top"
                           data-bs-custom-class="custom-tooltip" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
            </div>
            <div class="form-row">
                <div class="form-check form-switch custom-switch-lg">
                    <input class="form-check-input" type="checkbox" role="switch" id="switchToggle">
                    <label class="form-check-label custom-switch-label" for="switchToggle">Update Password</label>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" class="form-control"
                           asp-for="Password" placeholder="••••••••" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="confirmpassword">Confirm password</label>
                    <input type="password" id="confirmpassword" class="form-control"
                           asp-for="ConfirmPassword" placeholder="••••••••" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
            </div>
            @Html.AntiForgeryToken()

            <div class="button-container">
                <div class="button-group">
                    <button type="button" class="cancel-btn" onclick=" window.location.href='/User/Index'">CANCEL</button>
                    <button type="button" class="submit-btn" data-bs-toggle="modal" data-bs-target="#saveModal">
                        SAVE CHANGES
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Save confirmation modal -->
<partial name="_ConfirmationModal" model="saveConfirmationModal" />

<!-- Success modal -->
<partial name="_SuccessModal" model="successModal" />

@*
<div class="modal fade confirmation-modal" id="saveModal" tabindex="-1" aria-labelledby="saveModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="saveModalLabel">Save Changes</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <p class="mb-4">Are you sure you want to save your changes?</p>
                <div class="d-flex justify-content-center gap-2">
                    <button type="button" class="btn btn-secondary px-4" data-bs-dismiss="modal">Discard</button>
                    <button type="button" class="btn btn-danger-2 px-4" id="saveConfirmBtn">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade success-modal" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center py-4">
                <div class="success-icon mb-3">
                    <i class="fas fa-check"></i>
                </div>
                <h5 class="modal-title mb-2">Success!</h5>
                <p class="mb-4">User information saved successfully!</p>
                <button type="button" class="btn btn-secondary px-4" data-bs-dismiss="modal" id="successModalOkBtn">OK</button>
            </div>
        </div>
    </div>
</div>*@

<div id="customToast" class="toast align-items-center position-fixed top-0 end-0 mt-4 me-4 custom-toast-top"
     role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="4000">
    <div class="d-flex">
        <div class="toast-body" id="customToastBody">
            <!-- Message will be injected here -->
        </div>
        <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
</div> 

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/modal-helper.js" asp-append-version="true"></script>

    <script>
        function showEditSuccess() {
            closeAllModals(); // Close any open modals first

            setTimeout(function() {
                showSuccessModal('successModal', 'Success!', 'User information saved successfully!', false, '/User/Index');
            }, 100);
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Initial state
            togglePasswordFields();

            // Listen for switch changes
            document.getElementById('switchToggle').addEventListener('change', togglePasswordFields);

            // Setup save confirmation modal
            document.querySelector('.submit-btn').addEventListener('click', function(e) {
                e.preventDefault();
                showConfirmationModal('saveModal', null, null, function() {
                    document.querySelector('.edit-user-form').submit();
                });
            });

            // Show success modal only if the save was successful and not on page load
            @if (ViewData["SaveSuccess"] != null && (bool)ViewData["SaveSuccess"])
            {
                <text>
                console.log("Save was successful - showing success modal");
                setTimeout(function() {
                    showSuccessModal('successModal', 'Success!', 'User information saved successfully!', false, '/User/Index');
                }, 300);
                </text>
            }
        });
    </script>
    <script>
        // On page load and when the switch changes, toggle password fields
        function togglePasswordFields() {
            var isChecked = document.getElementById('switchToggle').checked;
            var passwordInput = document.getElementById('password');
            var confirmPasswordInput = document.getElementById('confirmpassword');

            passwordInput.disabled = !isChecked;
            confirmPasswordInput.disabled = !isChecked;

            if (!isChecked) {
                passwordInput.value = '';
                confirmPasswordInput.value = '';
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Initial state
            togglePasswordFields();

            // Listen for switch changes
            document.getElementById('switchToggle').addEventListener('change', togglePasswordFields);
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize all tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.forEach(function (tooltipTriggerEl) {
                new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Show tooltip if username error exists
            var errorMessage = '@(errorMessage ?? "")';
            var isUsernameError = @isUsernameError.ToString().ToLower();

            if (isUsernameError) {
                var usernameInput = document.getElementById('name');
                usernameInput.setAttribute('data-bs-title', errorMessage);
                var tooltip = bootstrap.Tooltip.getOrCreateInstance(usernameInput);
                tooltip.show();
                usernameInput.classList.add('is-invalid');
            }
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var errorMessage = '@(errorMessage ?? "")';
            if (errorMessage) {
                var toastBody = document.getElementById('customToastBody');
                toastBody.textContent = errorMessage;
                var toastEl = document.getElementById('customToast');
                var toast = new bootstrap.Toast(toastEl);
                toast.show();
            }
        });
    </script>
}