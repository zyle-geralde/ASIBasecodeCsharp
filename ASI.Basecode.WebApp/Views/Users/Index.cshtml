@using ASI.Basecode.Data.Interfaces;
@model PaginatedList<ASI.Basecode.Data.Models.User>
@using Microsoft.AspNetCore.Routing;

@{
    ViewData["Title"] = "Users";
    Layout = "_AdminSidebarLayout";

    var currentSearch = (string?)ViewData["CurrentSearch"];
    var currentSort = (string?)ViewData["CurrentSort"];
    var currentSortDescending = (bool)(ViewData["CurrentSortDescending"] ?? false);
    var currentRoleFilter = (string?)ViewData["CurrentRoleFilter"];

    var routeValues = new Dictionary<string, string> {
        ["searchTerm"]     = currentSearch,
        ["role"]           = currentRoleFilter,
        ["sortOrder"]      = currentSort,
        ["sortDescending"] = currentSortDescending.ToString().ToLowerInvariant()
    };

    ViewData["CurrentPage"] = Model.PageIndex;
    ViewData["TotalPages"] = Model.TotalPages;

    var deleteConfirmationModal = new ConfirmationModalModel
    {
        Id = "deleteModal",
        Title = "Delete Confirmation",
        Message = "Are you sure you want to delete this user?",
        CancelButtonText = "Cancel",
        ConfirmButtonText = "Delete",
        ConfirmButtonId = "deleteConfirmBtn",
        ConfirmButtonClass = "btn-danger"
    };

    var successModal = new SuccessModalModel
    {
        Id = "successModal",
        Title = "Deleted!",
        Message = "User deleted successfully!",
        OkButtonText = "OK"
    };
    
    // Clear any success flags to prevent modals from showing on page load
    ViewData["SaveSuccess"] = null;
}

@section styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="~/css/admin/common.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/admin/users/userlist.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/modal.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/pagination.css" asp-append-version="true" />
}

<div class="users-container p-4">
    <div class="d-flex justify-content-between align-items-center mb-2">
        <div class="header-section">
            <h1>Users</h1>
            <p>View and manage users</p>
        </div>

        <a href="/User/AddUser" class="btn btn-secondary">
            <i class="fas fa-plus me-2" style="color: #fff"></i> ADD USERS
        </a>
    </div>

    <div class="card">
        <div class="card-body">  
            <form asp-action="Index" asp-controller="User" method="get" class="d-flex align-items-center mb-3">
                <input type="text"
                       name="searchTerm"
                       value="@currentSearch"
                       class="form-control me-2"
                       placeholder="Search users…" />

                <select name="role"
                        class="form-select me-2">
                    <option value="">All Roles</option>
                    <option value="Admin" selected="@(currentRoleFilter=="Admin")">Admin</option>
                    <option value="User"  selected="@(currentRoleFilter=="User")">User</option>
                </select>

                <select name="sortOrder"
                        class="form-select me-2">
                    <option value="id"        selected="@(currentSort=="id")">ID</option>
                    <option value="email"  selected="@(currentSort=="email")">Email</option>
                    <option value="createdtime"     selected="@(currentSort=="createdtime")">Created Date</option>
                </select>

                <select name="sortDescending"
                        class="form-select me-2">
                    <option value="false" selected="@(currentSortDescending==false)">Ascending</option>
                    <option value="true"  selected="@(currentSortDescending==true)">Descending</option>
                </select>

                <button type="submit" class="btn btn-primary">Apply</button>
            </form>

            <div class="table-container">
                <div class="scrollable-table-container">
                    <table class="table table-hover user-table">
                        <colgroup>
                            <col style="width: 20%;">
                            <col style="width: 30%;">
                            <col style="width: 40%;">
                            <col style="width: 10%;">
                        </colgroup>
                        <thead>
                            <tr>
                                <th>User ID</th>
                                <th>
                                    <a asp-action="Index" asp-route-searchTerm=@ViewData["CurrentSearch"]>
                                        Username
                                    </a>
                                </th>
                                <th>
                                    <a asp-action="Index" asp-route-searchTerm=@ViewData["CurrentSearch"]>
                                        Email
                                    </a>
                                </th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var u in Model)
                            {
                                <tr>
                                    <td>@u.Id</td>
                                    <td>@u.UserName</td>
                                    <td>@u.Email</td>
                                    <td>
                                        <div class="action-buttons">
                                            <button type="button" class="btn btn-icon text-danger"
                                                    onclick="setupDeleteModal(this)"
                                                    data-user-id="@u.Id"
                                                    data-user-name="@u.Email">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                            <a href="/User/EditUser/@u.Id" class="btn btn-icon text-primary">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <partial name="_PaginationPartial" />
            </div>

            
            
        @*    <div class="custom-pagination-container">
                <div class="custom-pagination">
                    <!-- First page button -->
                    <a class="page-btn @(Model.PageIndex > 2 ? "" : "disabled")"
                       asp-all-route-data="@(Model.PageIndex > 2 ? new Dictionary<string,string>(routeValues) { ["page"] = "1" } : null)">
                        <i class="fas fa-angle-double-left"></i>
                    </a>
                    
                    <!-- Previous page button -->
                    <a class="page-btn @(Model.HasPreviousPage ? "" : "disabled")"
                       asp-all-route-data="@(Model.HasPreviousPage ? new Dictionary<string,string>(routeValues) { ["page"] = (Model.PageIndex - 1).ToString() } : null)">
                        <i class="fas fa-angle-left"></i>
                    </a>
                    
                    <!-- Page numbers -->
                    @{
                        var startPage = Math.Max(1, Model.PageIndex - 2);
                        var endPage = Math.Min(Model.TotalPages, startPage + 4);
                        
                        // Ensure we show 5 page buttons if possible
                        if (endPage - startPage < 4 && Model.TotalPages > 4)
                        {
                            if (startPage == 1)
                            {
                                endPage = Math.Min(5, Model.TotalPages);
                            }
                            else
                            {
                                startPage = Math.Max(1, endPage - 4);
                            }
                        }
                        
                        for (int i = startPage; i <= endPage; i++)
                        {
                            <a class="page-btn @(i == Model.PageIndex ? "active" : "")"
                               asp-all-route-data="@(new Dictionary<string,string>(routeValues) { ["page"] = i.ToString() })">
                                @i
                            </a>
                        }
                    }
                    
                    <!-- Next page button -->
                    <a class="page-btn @(Model.HasNextPage ? "" : "disabled")"
                       asp-all-route-data="@(Model.HasNextPage ? new Dictionary<string,string>(routeValues) { ["page"] = (Model.PageIndex + 1).ToString() } : null)">
                        <i class="fas fa-angle-right"></i>
                    </a>
                    
                    <!-- Last page button -->
                    <a class="page-btn @(Model.PageIndex < Model.TotalPages - 1 ? "" : "disabled")"
                       asp-all-route-data="@(Model.PageIndex < Model.TotalPages - 1 ? new Dictionary<string,string>(routeValues) { ["page"] = Model.TotalPages.ToString() } : null)">
                        <i class="fas fa-angle-double-right"></i>
                    </a>
                </div>
            </div> *@
        </div>
    </div>
</div>

<partial name="_ConfirmationModal" model="deleteConfirmationModal" />
<partial name="_SuccessModal" model="successModal" />

<form id="deleteUserForm" method="post" style="display:none;">
    @Html.AntiForgeryToken()
    <input type="hidden" name="id" id="deleteUserId" />
</form>

<!-- Hidden field for TempData success message -->
@if (TempData["SuccessMessage"] != null)
{
    <input type="hidden" id="tempDataSuccessMessage" value="@TempData["SuccessMessage"]" />
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/modal-helper.js" asp-append-version="true"></script>
    <script>
        // Setup the delete modal with user information
        function setupDeleteModal(button) {
            const userId = button.getAttribute('data-user-id');
            const userName = button.getAttribute('data-user-name');
            
            // Set the user ID to the hidden form
            document.getElementById('deleteUserId').value = userId;
            
            // Show confirmation modal with dynamic message
            showConfirmationModal(
                'deleteModal',
                'Delete Confirmation',
                `Are you sure you want to delete user "${userName}"?`,
                submitDeleteForm
            );
        }

        // Submit the delete form with AJAX
        function submitDeleteForm() {
            const form = document.getElementById('deleteUserForm');
            const userId = document.getElementById('deleteUserId').value;
            const token = form.querySelector('input[name="__RequestVerificationToken"]').value;
            
            fetch('/User/Delete', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': token
                },
                body: 'id=' + encodeURIComponent(userId),
                redirect: 'follow'
            })
            .then(response => {
                // Treat redirect as success
                if (response.redirected || response.ok) {
                    // Close confirmation modal and show success
                    showSuccessModal('successModal', 'Deleted!', 'User deleted successfully!', true);
                } else {
                    alert('Failed to delete user.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while trying to delete the user.');
            });
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            // Check if there's a success message from a delete operation only
            const successMessage = document.getElementById('tempDataSuccessMessage');
            if (successMessage && successMessage.value && 
                (window.location.href.includes('User/Index') || 
                 document.referrer.includes('User/Delete'))) {
                showSuccessModal('successModal', 'Success!', successMessage.value, false);
            }
        });
    </script>
}