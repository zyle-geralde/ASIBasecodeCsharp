@model IEnumerable<ASI.Basecode.Data.Models.User>
@using ASI.Basecode.WebApp.Models

@{
    ViewData["Title"] = "Users";
    Layout = "_AdminSidebarLayout";

    var deleteConfirmationModal = new ConfirmationModalModel
    {
        Id = "deleteModal",
        Title = "Delete Confirmation",
        Message = "Are you sure you want to delete this user?",
        CancelButtonText = "Cancel",
        ConfirmButtonText = "Delete",
        ConfirmButtonId = "deleteConfirmBtn",
        ConfirmButtonClass = "btn-danger"
    };

    var successModal = new SuccessModalModel
    {
        Id = "successModal",
        Title = "Deleted!",
        Message = "User deleted successfully!",
        OkButtonText = "OK"
    };
    
    // Clear any success flags to prevent modals from showing on page load
    ViewData["SaveSuccess"] = null;
}

@section styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="~/css/admin/common.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/admin/users/userlist.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/modal.css" asp-append-version="true" />
}

<div class="users-container p-4">
    <div class="d-flex justify-content-between align-items-center mb-2">
        <div class="header-section">
            <h1>Users</h1>
            <p>View and manage users</p>
        </div>

        <a href="/User/AddUser" class="btn btn-secondary">
            <i class="fas fa-plus me-2" style="color: #fff"></i> ADD USERS
        </a>
    </div>

    <div class="card">
        <div class="card-body">
            <form asp-action="Index"
                  asp-controller="User"
                  method="get"
                  id="searchForm"
                  class="d-flex align-items-center w-100">
                <div class="search-filter-container">
                    <div style="position: relative; flex-grow: 1;">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text"
                               name="searchTerm"
                               value="@ViewData["CurrentSearch"]"
                               class="form-control search-field"
                               placeholder="Search users…" />
                    </div>
                    <div class="d-flex gap-2">
                        <button class="btn btn-outline-secondary">
                            <i class="fas fa-sort"></i> Sort
                        </button>
                    </div>
                </div>
            </form>

            <div class="table-responsive justify-content-around scrollable-table-container">
                <table class="table table-hover user-table">
                    <colgroup>
                        <col style="width: 20%;">
                        <col style="width: 30%;">
                        <col style="width: 40%;">
                        <col style="width: 10%;">
                    </colgroup>
                    <thead>
                        <tr>
                            <th>User ID</th>
                            <th>
                                <a asp-action="Index" asp-route-searchTerm=@ViewData["CurrentSearch"]>
                                    Username
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-searchTerm=@ViewData["CurrentSearch"]>
                                    Email
                                </a>
                            </th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var u in Model)
                        {
                            <tr>
                                <td>@u.Id</td>
                                <td>@u.UserName</td>
                                <td>@u.Email</td>
                                <td>
                                    <div class="action-buttons">
                                        <button type="button" class="btn btn-icon text-danger"
                                                onclick="setupDeleteModal(this)"
                                                data-user-id="@u.Id"
                                                data-user-name="@u.Email">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                        <a href="/User/EditUser/@u.Id" class="btn btn-icon text-primary">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<partial name="_ConfirmationModal" model="deleteConfirmationModal" />
<partial name="_SuccessModal" model="successModal" />

<form id="deleteUserForm" method="post" style="display:none;">
    @Html.AntiForgeryToken()
    <input type="hidden" name="id" id="deleteUserId" />
</form>

<!-- Hidden field for TempData success message -->
@if (TempData["SuccessMessage"] != null)
{
    <input type="hidden" id="tempDataSuccessMessage" value="@TempData["SuccessMessage"]" />
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/modal-helper.js" asp-append-version="true"></script>
    <script>
        // Setup the delete modal with user information
        function setupDeleteModal(button) {
            const userId = button.getAttribute('data-user-id');
            const userName = button.getAttribute('data-user-name');
            
            // Set the user ID to the hidden form
            document.getElementById('deleteUserId').value = userId;
            
            // Show confirmation modal with dynamic message
            showConfirmationModal(
                'deleteModal',
                'Delete Confirmation',
                `Are you sure you want to delete user "${userName}"?`,
                submitDeleteForm
            );
        }

        // Submit the delete form with AJAX
        function submitDeleteForm() {
            const form = document.getElementById('deleteUserForm');
            const userId = document.getElementById('deleteUserId').value;
            const token = form.querySelector('input[name="__RequestVerificationToken"]').value;
            
            fetch('/User/Delete', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': token
                },
                body: 'id=' + encodeURIComponent(userId),
                redirect: 'follow'
            })
            .then(response => {
                // Treat redirect as success
                if (response.redirected || response.ok) {
                    // Close confirmation modal and show success
                    showSuccessModal('successModal', 'Deleted!', 'User deleted successfully!', true);
                } else {
                    alert('Failed to delete user.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while trying to delete the user.');
            });
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            // Check if there's a success message from a delete operation only
            const successMessage = document.getElementById('tempDataSuccessMessage');
            if (successMessage && successMessage.value && 
                (window.location.href.includes('User/Index') || 
                 document.referrer.includes('User/Delete'))) {
                showSuccessModal('successModal', 'Success!', successMessage.value, false);
            }
        });
    </script>
}