@using ASI.Basecode.Services.ServiceModels
@model UserViewModel
@using ASI.Basecode.WebApp.Models
@{
    Layout = "_AdminSidebarLayout";
    var errorMessage = TempData["ErrorMessage"] as string;
    var isEmailError = errorMessage != null && errorMessage.ToLower().Contains("email");
    var isUsernameError = errorMessage != null && errorMessage.ToLower().Contains("username");

    var showSuccessModal = TempData["ShowSuccessModal"] != null && (bool)TempData["ShowSuccessModal"]
                         && Model?.Id > 0;
    var successMessage = TempData["SuccessMessage"] as string ?? "User added successfully!";

    var successModal = new SuccessModalModel
            {
                Id = "successModal",
                Title = "Success!",
                Message = "User added successfully!",
                OkButtonText = "OK"
            };
}

@section styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
    <link rel="stylesheet" href="~/css/admin/common.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/admin/users/adduser.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/modal.css" asp-append-version="true" />
}


<div class="admin-common-container">
    <div class="admin-common-content-wrapper">
        <div class="header-section">
            <h1>Add New User</h1>
            <p>Enter details of the new user here.</p>
        </div>
        <form asp-action="AddUser" asp-controller="User" method="post" class="add-user-form" id="addUserForm">
            @Html.AntiForgeryToken()

            <div class="form-row">
                <div class="form-group role-group">
                    <div class="btn-group role-btn-group" role="group" aria-label="Role selection" asp-for="Role">
                        <input type="radio"
                               asp-for="Role"
                               class="btn-check"
                               id="roleUser"
                               value="User"
                               autocomplete="off" />
                        <label class="btn role-btn" for="roleUser">User</label>

                        <input type="radio"
                               asp-for="Role"
                               class="btn-check"
                               id="roleAdmin"
                               value="Admin"
                               autocomplete="off" />
                        <label class="btn role-btn" for="roleAdmin">Admin</label>
                    </div>
                    <span asp-validation-for="Role" class="text-danger"></span>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="userId">Email</label>
                    <input type="email" id="userId" class="form-control"
                           asp-for="Email" placeholder="email@address.com"
                           data-bs-toggle="tooltip" data-bs-placement="top"
                           data-bs-custom-class="custom-tooltip" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="name">Username</label>
                    <input type="text" id="name" class="form-control"
                           asp-for="UserName" placeholder="Username"
                           data-bs-toggle="tooltip" data-bs-placement="top"
                           data-bs-custom-class="custom-tooltip" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" class="form-control"
                           asp-for="Password" placeholder="••••••••" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="confirmpassword">Confirm password</label>
                    <input type="password" id="confirmpassword" class="form-control"
                           asp-for="ConfirmPassword" placeholder="••••••••" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
            </div>

            <div class="button-container">
                <div class="button-group">
                    <button type="button" class="cancel-btn" onclick="window.location.href='/User/Index'">CANCEL</button>
                    <button type="button" class="submit-btn" id="addUserBtn">ADD USER</button>
                </div>
            </div>
        </form>
    </div>
</div>



<div class="modal fade confirmation-modal" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="addModalLabel">Review User Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <p-2 class="mb-1">Are you sure you want to add this user?</p-2>
                <div class="mb-4">
                    <p-1 class="mb-4" style="margin-bottom: 10px; font-size: 12px">Please review the details before proceeding</p-1>
                </div>

                <div class="d-flex justify-content-center gap-2">
                    <button type="button" class="btn btn-secondary px-4" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger-2 px-4" onclick="validateAndSubmitAddUserForm()">Add User</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/modal-helper.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addBtn = document.getElementById('addUserBtn');
            const emailInput = document.getElementById('userId');
            const emailErrorSpan = emailInput.nextElementSibling;
            const pwd = document.getElementById('password');
            const cpwd = document.getElementById('confirmpassword');
            const modalEl = document.getElementById('addModal');
            const modal = new bootstrap.Modal(modalEl);
            const usernameInput = document.getElementById('name');

            function isValidEmail(email) {
                const re = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                return re.test(email);
            }


        @if (isEmailError)
        {
            <text>toastr.error("@errorMessage"); </text>
        }
        @if (isUsernameError)
        {
            <text>toastr.error("@errorMessage"); </text>
        }
        @if (showSuccessModal)
        {
            <text>
                    toastr.success("@successMessage");
                @{
                    TempData.Remove("ShowSuccessModal");
                    TempData.Remove("SuccessMessage");
                }
            </text>
        }

                addBtn.addEventListener('click', function (e) {
                    e.preventDefault();
                    pwd.classList.remove('is-invalid');
                    cpwd.classList.remove('is-invalid');
                    emailInput.classList.remove('is-invalid');

                    const email = emailInput.value.trim();
                    if (!email) {
                        toastr.error("Email is required.");
                        emailInput.classList.add('is-invalid');
                        emailInput.focus();
                        return;
                    }

                    if (!isValidEmail(email)) {
                        toastr.error("Please enter a valid email address.");
                        emailInput.classList.add('is-invalid');
                        emailInput.focus();
                        return;
                    }

                    const username = usernameInput.value.trim();
                    if (username.length < 3 || username.length > 30) {
                        toastr.error("Username must be between 3 and 30 characters.");
                        usernameInput.classList.add('is-invalid');
                        usernameInput.focus();
                        return; // Exit early if invalid
                    }

                    if (pwd.value.length < 8) {
                        toastr.error("Password must be at least 8 characters long.");
                        pwd.classList.add('is-invalid');
                        return;
                    }
                    if (pwd.value !== cpwd.value) {
                        toastr.error("Passwords do not match.");
                        cpwd.classList.add('is-invalid');
                        return;
                    }
                    modal.show();
                });

        });

        function validateAndSubmitAddUserForm() {
            var form = document.getElementById('addUserForm');
            if (typeof $ !== 'undefined' && typeof $.validator !== 'undefined') {
                if ($(form).valid()) form.submit();
            } else {
                form.submit();
            }
        }
    </script>

}