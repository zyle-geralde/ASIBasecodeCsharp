@using ASI.Basecode.Services.ServiceModels
@model UserViewModel
@using ASI.Basecode.WebApp.Models
@{
    Layout = "_AdminSidebarLayout";
    var errorMessage = TempData["ErrorMessage"] as string;
    var isEmailError = errorMessage != null && errorMessage.ToLower().Contains("email");
    var isUsernameError = errorMessage != null && errorMessage.ToLower().Contains("username");

    var showSuccessModal = TempData["ShowSuccessModal"] != null && (bool)TempData["ShowSuccessModal"];
    var successMessage = TempData["SuccessMessage"] as string ?? "User added successfully!";

    var successModal = new SuccessModalModel
    {
        Id = "successModal",
        Title = "Success!",
        Message = "User added successfully!",
        OkButtonText = "OK"
    };
}

@section styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
    <link rel="stylesheet" href="~/css/admin/common.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/admin/users/adduser.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/modal.css" asp-append-version="true" />
}


<div class="admin-common-container">
    <div class="admin-common-content-wrapper">
        <div class="header-section">
            <h1>Add New User</h1>
            <p>Enter details of the new user here.</p>
        </div>
        <form asp-action="AddUser" asp-controller="User" method="post" class="add-user-form" id="addUserForm">
            @Html.AntiForgeryToken()
            <div class="form-row">
                <div class="form-group">
                    <label for="userId">Email</label>
                    <input type="email" id="userId" class="form-control"
                           asp-for="Email" placeholder="sample@gmail.com"
                           data-bs-toggle="tooltip" data-bs-placement="top"
                           data-bs-custom-class="custom-tooltip" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="name">Username</label>
                    <input type="text" id="name" class="form-control"
                           asp-for="UserName" placeholder="Username"
                           data-bs-toggle="tooltip" data-bs-placement="top"
                           data-bs-custom-class="custom-tooltip" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" class="form-control"
                           asp-for="Password" placeholder="••••••••" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="confirmpassword">Confirm password</label>
                    <input type="password" id="confirmpassword" class="form-control"
                           asp-for="ConfirmPassword" placeholder="••••••••" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
            </div>

            <div class="button-container">
                <div class="button-group">
                    <button type="button" class="cancel-btn" onclick="window.location.href='/User/Index'">CANCEL</button>
                    <button type="button" class="submit-btn" data-bs-toggle="modal" data-bs-target="#addModal">ADD USER</button>
                </div>
            </div>
        </form>
    </div>
</div>



<div class="modal fade confirmation-modal" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="addModalLabel">Review User Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <p-2 class="mb-1">Are you sure you want to add this user?</p-2>
                <div class="mb-4">
                    <p-1 class="mb-4" style="margin-bottom: 10px; font-size: 12px">Please review the details before proceeding</p-1>
                </div>

                <div class="d-flex justify-content-center gap-2">
                    <button type="button" class="btn btn-secondary px-4" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger-2 px-4" onclick="validateAndSubmitAddUserForm()">Add User</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/modal-helper.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script>
        function validateAndSubmitAddUserForm() {
            var form = document.getElementById('addUserForm');
            // If using jQuery validation (unobtrusive), trigger validation
            if (typeof $ !== 'undefined' && typeof $.validator !== 'undefined') {
                if ($(form).valid()) {
                    form.submit();
                }
            } else {
                // fallback: submit anyway
                form.submit();
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Show error messages in toast if there are any
            var errorMessage = '@(errorMessage ?? "")';
            if (errorMessage) {
                toastr.error(errorMessage);
            }

                    // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.forEach(function (tooltipTriggerEl) {
                new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Show tooltip for username error if it exists
            var isUsernameError = @isUsernameError.ToString().ToLower();
            if (isUsernameError) {
                var usernameInput = document.getElementById('name');
                usernameInput.setAttribute('data-bs-title', errorMessage);
                var tooltip = bootstrap.Tooltip.getOrCreateInstance(usernameInput);
                tooltip.show();
                usernameInput.classList.add('is-invalid');
            }

            // Show tooltip for email error if it exists
            var isEmailError = @isEmailError.ToString().ToLower();
            if (isEmailError) {
                var emailInput = document.getElementById('userId');
                emailInput.setAttribute('data-bs-title', errorMessage);
                var tooltip = bootstrap.Tooltip.getOrCreateInstance(emailInput);
                tooltip.show();
                emailInput.classList.add('is-invalid');
            }

            toastr.options = {
            "closeButton": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "timeOut": "3000"
        };

        // Show toastr for success messages
        @if (TempData["SuccessMessage"] != null)
        {
                var msg = TempData["SuccessMessage"] as string;
                if (!string.IsNullOrEmpty(msg))
                {
                        <text>toastr.success("@msg");</text>
                }
        }
        });
    </script>
}