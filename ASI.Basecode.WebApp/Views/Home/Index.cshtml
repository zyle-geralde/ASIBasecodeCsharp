@using ASI.Basecode.Services.ServiceModels
@model HomeViewModel


@{
    ViewData["Title"] = "Home Page";
}


@section styles {
    <link rel="stylesheet" href="~/css/Index.css" asp-append-version="true" />
}


<div class="main-grid">
    <!-- Left Column -->
    <div class="left-column">
        <!-- What Do You Feel Like Reading? Section -->
        <section class="section-card-genre">
            <h2>What Do You Feel Like Reading?</h2>
            <p>Find books that match your mood!</p>
            <div class="category-scroll-container">
                @foreach (var genre in Model.Genres)
                {
                    <a asp-controller="Book"
                       asp-action="SearchResults"
                       asp-route-genreFilter="@genre.BookGenreId"
                       asp-route-category="@genre.GenreName"
                       class="category-card">
                        <img src="@genre.GenreImageUrl"
                             alt="@genre.GenreName Books" />
                        <div class="category-card-overlay">
                            <span>@genre.GenreName</span>
                        </div>
                    </a>
                }
            </div>
        </section>
        @* <ul>
        <!-- View Books Top Rated By Users? Section -->
        <section class="section-card">
        <div class="book-list-header">
        <h2>View Books Top Rated By Users?</h2>
        <a asp-controller="Book" asp-action="SearchResults" asp-route-sortOrder="rating" asp-route-sortDescending="true" asp-route-category="Top Rated">See More</a>
        </div>
        @foreach (var book in Model.TopRatedBooks)
        {
        <a class="book-card"
        href="/Book/BookDetails/@book.BookId">
        <img src="@book.CoverImage" alt="@book.Title Book Cover">
        <div class="book-card-content">
        <h3>@book.Title</h3>
        <p class="author">by @book.Author</p>
        <p class="description"><i>@book.Description</i></p>
        <div class="star-rating">
        <div class="stars">
        @for (int i = 0; i < 5; i++)
        {
        if (i < book.AverageRating)
        {
        <svg viewBox="0 0 24 24"><path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.212L12 18.896l-7.416 3.948 1.48-8.212L.001 9.306l8.332-1.151L12 .587z" /></svg>
        }
        else
        {
        <svg class="empty-star" viewBox="0 0 24 24"><path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.212L12 18.896l-7.416 3.948 1.48-8.212L.001 9.306l8.332-1.151L12 .587z" /></svg>
        }
        }
        </div>
        <span class="rating-text">@book.AverageRating/5</span>
        </div>
        <div class="genre-tags">
        <span class="genre-tag">@book.GenreList</span>

        @* @if (!book.GenreList.Any())
        {
        @foreach (var tag in book.GenreList)
        {
        <span class="genre-tag @tag">@tag</span>
        }
        }
        else
        {
        <p>stay a while</p>
        }

        </div>
        </div>
        </a>
        }
        </section>
        <ul> *@

        <section class="section-card">
            <div class="book-list-header">
                <h2>View Books Top Rated By Users?</h2>
                <div class="see-more-link-wrapper">
                    <a asp-controller="Book" 
                     asp-action="SearchResults" 
                     asp-route-sortOrder="rating" 
                     asp-route-sortDescending="true" 
                     asp-route-category="Top Rated">See More</a>
                </div>
            </div>
            <div class="book-carousel-container top-rated-carousel">
                <button class="carousel-button prev-button">❮</button>
                <div class="book-display-wrapper">
                    @for (int i = 0; i < Model.TopRatedBooks.Count; i++)
                    {
                        var book = Model.TopRatedBooks[i];
                        <a class="book-card-single @(i == 0 ? "" : "hidden-book-card")"
                           href="/Book/BookDetails/@book.BookId">
                            <img src="@book.CoverImage" alt="@book.Title Book Cover">
                            <div class="book-card-content">
                                <h3>@book.Title</h3>
                                <p class="author">by @book.Author</p>
                                <p class="description"><i>@book.Description</i></p>
                                <div class="star-rating">
                                    <div class="stars">
                                        @for (int j = 0; j < 5; j++)
                                        {
                                            if (j < book.AverageRating)
                                            {
                                                <svg viewBox="0 0 24 24"><path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.212L12 18.896l-7.416 3.948 1.48-8.212L.001 9.306l8.332-1.151L12 .587z" /></svg>
                                            }
                                            else
                                            {
                                                <svg class="empty-star" viewBox="0 0 24 24"><path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.212L12 18.896l-7.416 3.948 1.48-8.212L.001 9.306l8.332-1.151L12 .587z" /></svg>
                                            }
                                        }
                                    </div>
                                    <span class="rating-text">@book.AverageRating/5</span>
                                </div>
                                <div class="genre-tags">
                                    @{
                                        var genres = book.GenreList?.Split(new[] { ',', ';' }, StringSplitOptions.RemoveEmptyEntries)
                                        .Select(s => s.Trim())
                                        .ToList() ?? new List<string>();

                                        var colorClasses = new string[] {
                                            "dynamic-genre-1", "dynamic-genre-2", "dynamic-genre-3", "dynamic-genre-4", "dynamic-genre-5",
                                            "dynamic-genre-6", "dynamic-genre-7", "dynamic-genre-8", "dynamic-genre-9", "dynamic-genre-10"
                                                        };

                                        foreach (var tag in genres)
                                        {
                                            var colorIndex = Math.Abs(tag.GetHashCode()) % colorClasses.Length;
                                            <span class="genre-tag @colorClasses[colorIndex]">@tag</span>
                                        }
                                    }
                                </div>
                            </div>
                        </a>
                    }
                </div>
                <button class="carousel-button next-button">❯</button>
            </div>
        </section>

        <section class="section-card">
            <div class="book-list-header">
                <h2>View New Books</h2>
                <div class="see-more-link-wrapper">
                    <a asp-controller="Book" 
                     asp-action="SearchResults" 
                     asp-route-sortOrder="uploaddate" 
                     asp-route-sortDescending="true" 
                     asp-route-category="New Books">See More</a>
                </div>
            </div>
            <div class="book-carousel-container new-books-carousel">
                <button class="carousel-button prev-button">❮</button>
                <div class="book-display-wrapper">
                    @for (int i = 0; i < Model.NewBooks.Count; i++)
                    {
                        var book = Model.NewBooks[i];
                        <a class="book-card-single @(i == 0 ? "" : "hidden-book-card")"
                           href="/Book/BookDetails/@book.BookId">
                            <img src="@book.CoverImage" alt="@book.Title Book Cover">
                            <div class="book-card-content">
                                <h3>@book.Title</h3>
                                <p class="author">by @book.Author</p>
                                <p class="description"><i>@book.Description</i></p>
                                <div class="star-rating">
                                    <div class="stars">
                                        @for (int j = 0; j < 5; j++)
                                        {
                                            if (j < book.AverageRating)
                                            {
                                                <svg viewBox="0 0 24 24"><path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.212L12 18.896l-7.416 3.948 1.48-8.212L.001 9.306l8.332-1.151L12 .587z" /></svg>
                                            }
                                            else
                                            {
                                                <svg class="empty-star" viewBox="0 0 24 24"><path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.212L12 18.896l-7.416 3.948 1.48-8.212L.001 9.306l8.332-1.151L12 .587z" /></svg>
                                            }
                                        }
                                    </div>
                                    <span class="rating-text">@book.AverageRating/5</span>
                                </div>
                                <div class="genre-tags">
                                    @{
                                        var genres = book.GenreList?.Split(new[] { ',', ';' }, StringSplitOptions.RemoveEmptyEntries)
                                        .Select(s => s.Trim())
                                        .ToList() ?? new List<string>();

                                        var colorClasses = new string[] {
                                            "dynamic-genre-1", "dynamic-genre-2", "dynamic-genre-3", "dynamic-genre-4", "dynamic-genre-5",
                                            "dynamic-genre-6", "dynamic-genre-7", "dynamic-genre-8", "dynamic-genre-9", "dynamic-genre-10"
                                                        };

                                        foreach (var tag in genres)
                                        {
                                            var colorIndex = Math.Abs(tag.GetHashCode()) % colorClasses.Length;
                                            <span class="genre-tag @colorClasses[colorIndex]">@tag</span>
                                        }
                                    }
                                </div>
                            </div>
                        </a>
                    }
                </div>
                <button class="carousel-button next-button">❯</button>
            </div>

        </section>
        <!-- View New Books Section -->
        @* <section class="section-card">
        <div class="book-list-header">
        <h2>View New Books</h2>
        <a asp-controller="Book" asp-action="SearchResults" asp-route-sortOrder="uploaddate" asp-route-sortDescending="true" asp-route-category="New Books">See More</a>
        </div>
        @foreach (var book in Model.NewBooks)
        {
        <a class="book-card"
        href="/Book/BookDetails/@book.BookId">
        <img src="@book.CoverImage" alt="@book.Title Book Cover">
        <div class="book-card-content">
        <h3>@book.Title</h3>
        <p class="author">by @book.Author</p>
        <p class="description"><i>@book.Description</i></p>
        <div class="star-rating">
        <div class="stars">
        @for (int i = 0; i < 5; i++)
        {
        if (i < book.AverageRating)
        {
        <svg viewBox="0 0 24 24"><path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.212L12 18.896l-7.416 3.948 1.48-8.212L.001 9.306l8.332-1.151L12 .587z" /></svg>
        }
        else
        {
        <svg class="empty-star" viewBox="0 0 24 24"><path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.212L12 18.896l-7.416 3.948 1.48-8.212L.001 9.306l8.332-1.151L12 .587z" /></svg>
        }
        }
        </div>
        <span class="rating-text">@book.AverageRating/5</span>
        </div>

        <div class="genre-tags">
        <span class="">@book.GenreList</span>

        </div>
        </div>
        </a>
        }
        </section> *@
    </div>

    <!-- Right Column - Featured Reads -->
    <div class="featured-column">
        <div class="book-list-header">
            <h2>Featured Reads</h2>
            <a href="#">See More</a>
        </div>

        @foreach (var book in Model.FeaturedBooks)
        {
            <div class="featured-book-card">
                <img src="@book.CoverImage" alt="@book.Title Book Cover">
                <div class="featured-book-card-content">
                    <h3>@book.Title</h3>
                    <p class="author">by @book.Author</p>
                    <p class="description">@book.Description</p>
                    <div class="star-rating featured-star-rating">
                        <div class="stars">
                            @for (int i = 0; i < 5; i++)
                            {
                                if (i < book.AverageRating)
                                {
                                    <svg viewBox="0 0 24 24"><path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.212L12 18.896l-7.416 3.948 1.48-8.212L.001 9.306l8.332-1.151L12 .587z" /></svg>
                                }
                                else
                                {
                                    <svg class="empty-star" viewBox="0 0 24 24"><path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.212L12 18.896l-7.416 3.948 1.48-8.212L.001 9.306l8.332-1.151L12 .587z" /></svg>
                                }
                            }
                        </div>
                    </div>
                    <div class="genre-tags">
                        @{
                            var genres = book.GenreList?.Split(new[] { ',', ';' }, StringSplitOptions.RemoveEmptyEntries)
                            .Select(s => s.Trim())
                            .ToList() ?? new List<string>();

                            var colorClasses = new string[] {
                                "dynamic-genre-1", "dynamic-genre-2", "dynamic-genre-3", "dynamic-genre-4", "dynamic-genre-5",
                                "dynamic-genre-6", "dynamic-genre-7", "dynamic-genre-8", "dynamic-genre-9", "dynamic-genre-10"
                                };

                            foreach (var tag in genres)
                            {
                                var colorIndex = Math.Abs(tag.GetHashCode()) % colorClasses.Length;
                                <span class="genre-tag @colorClasses[colorIndex]">@tag</span>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    @* <div class="featured-column">
    <div class="book-list-header">
    <h2>Featured Reads</h2>
    <a href="#">See More</a>
    </div>

    @foreach (var book in featuredBooks)
    {
    <div class="featured-book-card">
    <img src="@book.ImageUrl" alt="@book.Title Book Cover">
    <div class="featured-book-card-content">
    <h3>@book.Title</h3>
    <p class="author">by @book.Author</p>
    <p class="description">@book.Description</p>
    <div class="star-rating featured-star-rating">
    <div class="stars">
    @for (int i = 0; i < 5; i++)
    {
    if (i < book.Rating)
    {
    <svg viewBox="0 0 24 24"><path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.212L12 18.896l-7.416 3.948 1.48-8.212L.001 9.306l8.332-1.151L12 .587z" /></svg>
    }
    else
    {
    <svg class="empty-star" viewBox="0 0 24 24"><path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.212L12 18.896l-7.416 3.948 1.48-8.212L.001 9.306l8.332-1.151L12 .587z" /></svg>
    }
    }
    </div>
    </div>

    <div class="genre-tags">
    @* <spa class="genre-tag">@book.GenreList</spa> *@

    @* @foreach (var tag in book.GenreNames)
    {
    <span class="genre-tag">@tag</span>
    }
    </div>

    </div>
    </div>
    }
    </div> *@
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // single book carousel
        function setupSingleBookCarousel(containerClass) {
            const container = $(containerClass);
            const bookCards = container.find('.book-card-single');
            const prevButton = container.find('.prev-button');
            const nextButton = container.find('.next-button');

            let currentIndex = 0;

            function showCurrentBook() {
                bookCards.addClass('hidden-book-card');

                if (bookCards.length > 0 && currentIndex >= 0 && currentIndex < bookCards.length) {
                    const bookToShow = bookCards.eq(currentIndex);
                    bookToShow.removeClass('hidden-book-card');
                }

                // disable/hide buttons
                if (bookCards.length <= 1) {
                    prevButton.prop('disabled', true);
                    nextButton.prop('disabled', true);
                } else {
                    prevButton.prop('disabled', currentIndex === 0);
                    nextButton.prop('disabled', currentIndex >= bookCards.length - 1);
                }
            }

            nextButton.on('click', function () {
                if (currentIndex < bookCards.length - 1) {
                    currentIndex++;
                    showCurrentBook();
                }
            });

            prevButton.on('click', function () {
                if (currentIndex > 0) {
                    currentIndex--;
                    showCurrentBook();
                }
            });

            showCurrentBook();
        }

        setupSingleBookCarousel('.top-rated-carousel');
        setupSingleBookCarousel('.new-books-carousel');
    });
</script>
